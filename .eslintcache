[{"C:\\Users\\kipin\\personaltrainer\\src\\index.js":"1","C:\\Users\\kipin\\personaltrainer\\src\\App.js":"2","C:\\Users\\kipin\\personaltrainer\\src\\reportWebVitals.js":"3","C:\\Users\\kipin\\personaltrainer\\src\\components\\Customerlist.js":"4","C:\\Users\\kipin\\personaltrainer\\src\\components\\Traininglist.js":"5","C:\\Users\\kipin\\personaltrainer\\src\\components\\Editcustomer.js":"6","C:\\Users\\kipin\\personaltrainer\\src\\components\\Addcustomer.js":"7","C:\\Users\\kipin\\personaltrainer\\src\\components\\Addtraining.js":"8","C:\\Users\\kipin\\personaltrainer\\src\\components\\Calendar.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":2135,"mtime":1609681997484,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3725,"mtime":1609681795826,"results":"14","hashOfConfig":"11"},{"size":1673,"mtime":1609674739597,"results":"15","hashOfConfig":"11"},{"size":4788,"mtime":1609669792542,"results":"16","hashOfConfig":"11"},{"size":4397,"mtime":1609674232327,"results":"17","hashOfConfig":"11"},{"size":3400,"mtime":1609681690186,"results":"18","hashOfConfig":"11"},{"size":1549,"mtime":1609707851146,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nlplmk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kipin\\personaltrainer\\src\\index.js",[],["43","44"],"C:\\Users\\kipin\\personaltrainer\\src\\App.js",["45","46","47"],"import React from 'react';\nimport './App.css';\nimport Customerlist from './components/Customerlist';\nimport Traininglist from './components/Traininglist';\nimport Calendar from './components/Calendar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport moment from 'moment';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{backgroundColor: \"#16448c\", color: \"white\"}}>\n        <Toolbar>\n          <div class=\"toolbar\">\n          <Typography variant=\"h4\" className={classes.title}>\n            <div class=\"title\">\n            Personal Trainer - customers and trainings\n            </div>\n          </Typography>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <Router>\n        <div class=\"menu\">\n          <Button size=\"large\" color=\"primary\" component={Link} to=\"/\" style={{fontFamily: 'Merriweather Sans'}}>\n            Customers\n          </Button>\n          <Button size=\"large\" color=\"primary\" component={Link} to=\"/trainings\" style={{fontFamily: 'Merriweather Sans'}}>\n            Trainings\n          </Button>\n          <Button size=\"large\" color=\"primary\" component={Link} to=\"/calendar\" style={{fontFamily: 'Merriweather Sans'}}>\n            Calendar\n          </Button>\n          <Switch>\n            <Route exact path=\"/\" component={Customerlist} />\n            <Route path=\"/trainings\" component={Traininglist} />\n            <Route path=\"/calendar\" component={Calendar} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\kipin\\personaltrainer\\src\\reportWebVitals.js",[],"C:\\Users\\kipin\\personaltrainer\\src\\components\\Customerlist.js",["48"],"import React, {useState, useEffect} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Editcustomer from './Editcustomer';\r\nimport Addcustomer from './Addcustomer';\r\nimport Addtraining from './Addtraining';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function Customerlist() {\r\n    //name, how to modify\r\n    const [customers, setCustomers] = useState([ ]);\r\n\r\n    useEffect (() => fetchData(), []);\r\n\r\n    const fetchData = () => {\r\n        fetch ('https://customerrest.herokuapp.com/api/customers')\r\n        .then(response => response.json())\r\n        .then(data => setCustomers(data.content))\r\n    }\r\n\r\n    const deleteCustomer = (link) => {\r\n        if(window.confirm('Are you sure you want to delete the customer?')){\r\n            fetch(link, {method: 'DELETE'})\r\n            .then(res => fetchData())\r\n            .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    const saveCustomer = (customer) => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customer)\r\n        })\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const saveTraining = (training) => {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(training),\r\n        })\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const updateCustomer = (customer, link) => {\r\n        fetch(link, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customer)\r\n        })\r\n                .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 55,\r\n            Cell: row => <Editcustomer updateCustomer={updateCustomer} customer={row.original} />\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 55,\r\n            accessor: 'links.0.href',\r\n            Cell: row => \r\n            <IconButton aria-label=\"delete\" onClick={() => deleteCustomer(row.value)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n        },\r\n        {\r\n            Header: 'First name',\r\n            accessor: 'firstname'\r\n        },\r\n        {\r\n            Header: 'Last name',\r\n            accessor: 'lastname'\r\n        },\r\n        {\r\n            Header: 'Street address',\r\n            accessor: 'streetaddress'\r\n        },\r\n        {\r\n            Header: 'Post code',\r\n            accessor: 'postcode'\r\n        },\r\n        {\r\n            Header: 'City',\r\n            accessor: 'city'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Phone number',\r\n            accessor: 'phone'\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 130,\r\n            Cell: row => <Addtraining saveTraining={saveTraining}/>\r\n        },\r\n    ]\r\n\r\n        return (\r\n        <div>\r\n            <Addcustomer saveCustomer={saveCustomer}/>\r\n            <ReactTable filterable={true} data={customers} columns={columns} />\r\n        </div>\r\n    );\r\n}","C:\\Users\\kipin\\personaltrainer\\src\\components\\Traininglist.js",["49"],"import React, {useState, useEffect} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport moment from 'moment';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function Traininglist() {\r\n    //name, how to modify\r\n    const [trainings, setTrainings] = useState([ ]);\r\n\r\n    useEffect (() => fetchData(), []);\r\n\r\n    const fetchData = () => {\r\n        fetch ('https://customerrest.herokuapp.com/api/trainings')\r\n        .then(response => response.json())\r\n        .then(data => setTrainings(data.content))\r\n    }\r\n\r\n    const deleteTraining = (link) => {\r\n        if(window.confirm('Are you sure you want to delete the training?')){\r\n            fetch(link, {method: 'DELETE'})\r\n            .then(res => fetchData())\r\n            .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Date',\r\n            accessor: 'date',\r\n\r\n        },\r\n        {\r\n            Header: 'Activity',\r\n            accessor: 'activity'\r\n        },\r\n        {\r\n            Header: 'Duration',\r\n            accessor: 'duration'\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 55,\r\n            accessor: 'links.0.href',\r\n            Cell: row => \r\n            <IconButton aria-label=\"delete\" onClick={() => deleteTraining(row.value)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <ReactTable filterable={true} data={trainings} columns={columns} />\r\n        </div>\r\n    );    \r\n}","C:\\Users\\kipin\\personaltrainer\\src\\components\\Editcustomer.js",[],"C:\\Users\\kipin\\personaltrainer\\src\\components\\Addcustomer.js",[],"C:\\Users\\kipin\\personaltrainer\\src\\components\\Addtraining.js",["50"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { getAllByPlaceholderText } from '@testing-library/react';\r\n\r\nexport default function Addtraining(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [training, setTraining] = React.useState({\r\n        date: '', duration: '', activity: '', customer: ''\r\n    });\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setTraining({...training, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const addTraining = () => {\r\n        console.log(training);\r\n        props.saveTraining(training);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} style={{fontFamily: 'Merriweather Sans'}}>\r\n               Add training\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New training</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"date\"\r\n                            value={training.date}\r\n                            onChange={e => handleInputChange(e)}\r\n                            label=\"Date\"\r\n                            fullWidth\r\n                        />\r\n                         <TextField\r\n                            margin=\"dense\"\r\n                            name=\"activity\"\r\n                            value={training.activity}\r\n                            onChange={e => handleInputChange(e)}\r\n                            label=\"Activity\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"duration\"\r\n                            value={training.duration}\r\n                            onChange={e => handleInputChange(e)}\r\n                            label=\"Duration\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"customer\"\r\n                            value={training.customer}\r\n                            onChange={e => handleInputChange(e)}\r\n                            label=\"Customer\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={addTraining} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\kipin\\personaltrainer\\src\\components\\Calendar.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":11,"column":8,"nodeType":"57","messageId":"58","endLine":11,"endColumn":18},{"ruleId":"55","severity":1,"message":"59","line":12,"column":8,"nodeType":"57","messageId":"58","endLine":12,"endColumn":16},{"ruleId":"55","severity":1,"message":"60","line":13,"column":8,"nodeType":"57","messageId":"58","endLine":13,"endColumn":14},{"ruleId":"55","severity":1,"message":"61","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":14},{"ruleId":"55","severity":1,"message":"60","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":14},{"ruleId":"55","severity":1,"message":"62","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":33},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'moment' is defined but never used.","'Button' is defined but never used.","'getAllByPlaceholderText' is defined but never used.","no-global-assign","no-unsafe-negation"]